<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="logistics.work.models.dao.WorkDao">
    <select id="queryWorkByPage" parameterType="java.util.Map"
            resultType="logistics.work.models.dto.ShowWorkAuditConditionDto">
        select *
        from(select
        wad.id,
        sc1.`name` as audit_status,
        wa.work_name,
        wa.work_content,
        wa.work_instructor,
        wa.work_minutes,
        wa.origin_work_id,
        wad.audit_time as time
        from work_audit_detail as wad
        left join work_audit as wa
        on wad.audit_item_id=wa.id
        left join sys_config as sc1
        on wad.audit_status=sc1.code
        where wad.audit_time is not null
        UNION
        select
        wad.id,
        sc1.`name` as audit_status,
        wa.work_name,
        wa.work_content,
        wa.work_instructor,
        wa.work_minutes,
        wa.origin_work_id,
        wa.audit_submit_time as time
        from work_audit_detail as wad
        left join work_audit as wa
        on wad.audit_item_id=wa.id
        left join sys_config as sc1
        on wad.audit_status=sc1.code
        where wad.audit_time is null)a
        <where>
            <if test="workName!=null">
                work_name like "%"#{workName}"%"
            </if>
        </where>
        order by time desc
        limit #{pageStart},#{pageSize}
    </select>
    <select id="queryWorkCount" parameterType="java.util.Map"
            resultType="Integer">
        select count(*)
        from(select
        wad.id,
        sc1.`name` as audit_status,
        wa.work_name,
        wa.work_content,
        wa.work_instructor,
        wa.work_minutes,
        wa.origin_work_id,
        wad.audit_time as time
        from work_audit_detail as wad
        left join work_audit as wa
        on wad.audit_item_id=wa.id
        left join sys_config as sc1
        on wad.audit_status=sc1.code
        where wad.audit_time is not null
        UNION
        select
        wad.id,
        sc1.`name` as audit_status,
        wa.work_name,
        wa.work_content,
        wa.work_instructor,
        wa.work_minutes,
        wa.origin_work_id,
        wa.audit_submit_time as time
        from work_audit_detail as wad
        left join work_audit as wa
        on wad.audit_item_id=wa.id
        left join sys_config as sc1
        on wad.audit_status=sc1.code
        where wad.audit_time is null)a
        <where>
            <if test="workName!=null">
                work_name like "%"#{workName}"%"
            </if>
        </where>
    </select>
    <select id="queryUnAddWork" parameterType="java.util.Map" resultType="logistics.work.models.domain.WorkPool">
        select
        wp.id,
        wp.work_name,
        wp.work_content,
        wp.work_instructor,
        wp.work_minutes,
        `user`.username
        from work_pool as wp
        LEFT JOIN `user`
        on `user`.id=wp.user_id
        <where>
            <if test="scheduleId!=null">
                wp.id not in (
                select work_id
                from work_schedule_detail as wsd
                where schedule_id=#{scheduleId})
            </if>
            and wp.work_from='w3'
            and wp.user_id=#{userId}
            <if test="workName!=null">
                and wp.work_name like "%"#{workName}"%"
            </if>
        </where>
    </select>
    <select id="queryWorkPoolCount" parameterType="java.util.Map" resultType="Integer">
    select
    count(*)
    from work_pool as wp
    <where>
        <if test="employeeId!=null">
            wp.user_id=#{employeeId}
        </if>
        <if test="workName!=null">
            and wp.work_name like "%"#{workName}"%"
        </if>
    </where>
</select>
    <insert id="addAgreeWork" parameterType="logistics.work.models.domain.WorkPool" useGeneratedKeys="true" keyProperty="id">
        insert into work_pool(user_id,work_name,work_content,work_instructor,work_minutes,work_from)
        values
        <foreach collection="list" item="workPool" separator=",">
            (#{userId},#{workName},#{workContent},#{workInstructor},#{workMinutes},#{workFrom})
        </foreach>
    </insert>
    <update id="updateAgreeWork" parameterType="logistics.work.models.domain.WorkPool">
        update work_pool
        set work_name=
        <foreach collection="list" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.workName}
        </foreach>,
        work_content=
        <foreach collection="list" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.workContent}
        </foreach>,
        work_instructor=
        <foreach collection="list" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.workInstructor}
        </foreach>,
        work_minutes=
        <foreach collection="list" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.workMinutes}
        </foreach>,
        work_from=
        <foreach collection="list" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.workFrom}
        </foreach>
        where id in
        (
        <foreach collection="list" item="item" separator=",">
            #{item.id}
        </foreach>
        )
    </update>
</mapper>
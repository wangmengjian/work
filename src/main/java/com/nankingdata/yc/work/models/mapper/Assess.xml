<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankingdata.yc.work.models.dao.AssessDao">
    <select id="queryAllAssess" parameterType="java.util.Map"
            resultType="com.nankingdata.yc.work.models.dto.ShowAssessDto">
        select
        wsd.id,
        sc1.name as finish_status,
        wp.work_name,
        wp.work_content,
        sc.name as workFrom,
        wp.work_minutes,
        wsd.begin_time,
        wsd.finish_time,
        wsd.finish_condition,
        wsd.finish_feedback,
        wa.assess_grade,
        users.real_name as empName,
        case when wa.id is null then 0 else 1 end as assessStatus,
        sc2.name as workPriority
        from work_schedule_detail as wsd
        left join work_pool as wp
        on wp.id=wsd.work_id
        left join work_assess as wa
        on wsd.id=wa.schedule_detail_id
        left join work_schedule as ws
        on ws.id=wsd.schedule_id
        left join usermanagement.`users`
        on ws.user_id=`users`.id
        left join sys_config as sc
        on sc.`code`=wp.work_from
        left join sys_config as sc1
        on sc1.`code`=wsd.finish_status
        left join sys_config as sc2
        on sc2.code=wp.work_priority
        <where>
            assess_time is null
            and ws.submit_status = 'submitted'
            and (wsd.finish_status ='completed' or wsd.finish_status='uncompleted')
            <if test="assessGrade!=null">
                and assess_grade = #{assessGrade}
            </if>
            <if test="employeeId!=null">
                and users.id=#{employeeId}
            </if>
            <if test="employeeIds!=null">
                and users.id in
                <foreach collection="employeeIds" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="finishStatus!=null">
                and finish_status=#{finishStatus}
            </if>
            <if test="workFrom!=null">
                and wp.work_From = #{workFrom}
            </if>
            <if test="workName!=null">
                and locate(#{workName},wp.work_name)
            </if>
            <if test="beginTime!=null">
                and date_format(#{beginTime},'%y-%c-%d') &lt;=date_format(wsd.begin_time,'%y-%c-%d')
            </if>
            <if test="endTime!=null">
                and date_format(#{endTime},'%y-%c-%d') &gt;=date_format(wsd.begin_time,'%y-%c-%d')
            </if>
            <if test="departmentId!=null">
                and users.department_id=#{departmentId}
            </if>
        </where>
        order by begin_time desc, finish_time desc
        <if test="pageStart!=null and pageSize!=null">
            limit #{pageStart},#{pageSize}
        </if>
    </select>
    <select id="queryAllAssessCount" resultType="Integer" parameterType="java.util.Map">
        select count(*)
        from work_schedule_detail as wsd
        left join work_pool as wp
        on wp.id=wsd.work_id
        left join work_assess as wa
        on wsd.id=wa.schedule_detail_id
        left join work_schedule as ws
        on ws.id=wsd.schedule_id
        left join usermanagement.`users`
        on ws.user_id=`users`.id
        left join sys_config as sc
        on sc.`code`=wp.work_from
        left join sys_config as sc1
        on sc1.`code`=wsd.finish_status
        <where>
            assess_time is null
            and ws.submit_status = 'submitted'
            and (wsd.finish_status ='completed' or wsd.finish_status='uncompleted')
            <if test="assessGrade!=null">
                and assess_grade = #{assessGrade}
            </if>
            <if test="employeeId!=null">
                and users.id=#{employeeId}
            </if>
            <if test="employeeIds!=null">
                and users.id in
                <foreach collection="employeeIds" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="finishStatus!=null">
                and finish_status=#{finishStatus}
            </if>
            <if test="workFrom!=null">
                and wp.work_From = #{workFrom}
            </if>
            <if test="workName!=null">
                and locate(#{workName},wp.work_name)
            </if>
            <if test="beginTime!=null">
                and date_format(#{beginTime},'%y-%c-%d') &lt;=date_format(wsd.begin_time,'%y-%c-%d')
            </if>
            <if test="endTime!=null">
                and date_format(#{endTime},'%y-%c-%d') &gt;=date_format(wsd.begin_time,'%y-%c-%d')
            </if>
            <if test="departmentId!=null">
                and users.department_id=#{departmentId}
            </if>
        </where>
    </select>
    <insert id="assessWork" parameterType="com.nankingdata.yc.work.models.domain.WorkAssess">
        insert into work_assess(assess_user_id,assess_time,assess_grade,assess_desc,schedule_detail_id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.assessUserId},NOW(),#{item.assessGrade},#{item.assessDesc},#{item.scheduleDetailId})
        </foreach>
    </insert>
    <select id="employeeQueryAllAssess" parameterType="java.util.Map"
            resultType="com.nankingdata.yc.work.models.dto.ShowAssessDto">
        select
        wsd.id,
        sc1.name as finish_status,
        wp.work_name,
        wp.work_content,
        sc.name as workFrom,
        wp.work_minutes,
        ws.date as beginTime,
        wsd.finish_time,
        wsd.finish_condition,
        wsd.finish_feedback,
        sc2.name as workPriority,
        wa.assess_grade,
        wa.assess_desc,
        case when wa.id is null then 0 else 1 end as assessStatus,
        users.real_name as empName
        from work_schedule_detail as wsd
        left join work_pool as wp
        on wp.id=wsd.work_id
        left join work_assess as wa
        on wsd.id=wa.schedule_detail_id
        left join work_schedule as ws
        on ws.id=wsd.schedule_id
        left join sys_config as sc
        on sc.`code`=wp.work_from
        left join sys_config as sc1
        on sc1.`code`=wsd.finish_status
        left join usermanagement.`users`
        on ws.user_id=`users`.id
        left join sys_config as sc2
        on sc2.code=wp.work_priority
        <where>
            ws.submit_status = 'submitted'
            <if test="userId!=null">
                and ws.user_id=#{userId}
            </if>
            <if test="assessGrade!=null">
                and assess_grade = #{assessGrade}
            </if>
            <if test="finishStatus!=null">
                and finish_status=#{finishStatus}
            </if>
            <if test="workName!=null">
                and locate(#{workName},wp.work_name)
            </if>
            <if test="workFrom!=null">
                and wp.work_from = #{workFrom}
            </if>
            <if test="beginTime!=null">
                and date_format(#{beginTime},'%y-%c-%d') &lt;=date_format(ws.date,'%y-%c-%d')
            </if>
            <if test="finishTime!=null">
                and date_format(ws.date,'%y-%c-%d')&lt;=date_format(#{finishTime},'%y-%c-%d')
            </if>
            <if test="assessStatus==1">
                and wa.id is not null
            </if>
            <if test="assessStatus==0">
                and wa.id is null
            </if>
        </where>
        order by ws.date desc, finish_time desc
        limit #{pageStart},#{pageSize}
    </select>
    <select id="employeeQueryAllAssessCount" parameterType="java.util.Map" resultType="Integer">
        select
        count(*)
        from work_schedule_detail as wsd
        left join work_pool as wp
        on wp.id=wsd.work_id
        left join work_assess as wa
        on wsd.id=wa.schedule_detail_id
        left join work_schedule as ws
        on ws.id=wsd.schedule_id
        left join sys_config as sc
        on sc.`code`=wp.work_from
        left join sys_config as sc1
        on sc1.`code`=wsd.finish_status
        <where>
            ws.submit_status = 'submitted'
            <if test="userId!=null">
                and ws.user_id=#{userId}
            </if>
            <if test="assessGrade!=null">
                and assess_grade = #{assessGrade}
            </if>
            <if test="finishStatus!=null">
                and finish_status=#{finishStatus}
            </if>
            <if test="workName!=null">
                and locate(#{workName},wp.work_name)
            </if>
            <if test="workFrom!=null">
                and wp.work_from = #{workFrom}
            </if>
            <if test="beginTime!=null">
                and date_format(#{beginTime},'%y-%c-%d') &lt;=date_format(ws.date,'%y-%c-%d')
            </if>
            <if test="finishTime!=null">
                and date_format(ws.date,'%y-%c-%d')&lt;=date_format(#{finishTime},'%y-%c-%d')
            </if>
            <if test="assessStatus==1">
                and wa.id is not null
            </if>
            <if test="assessStatus==0">
                and wa.id is null
            </if>
        </where>
    </select>
    <select id="queryOtherDeptAssess" parameterType="java.util.Map"
            resultType="com.nankingdata.yc.work.models.dto.ShowAssessDto">
        select
        wsd.id,
        sc1.name as finish_status,
        wp.work_name,
        wp.work_content,
        sc.name as workFrom,
        wp.work_minutes,
        wsd.begin_time,
        wsd.finish_time,
        wa.assess_grade,
        users.real_name as empName,
        sc2.name as workPriority
        from work_schedule_detail as wsd
        left join work_pool as wp
        on wp.id=wsd.work_id
        left join work_assess as wa
        on wsd.id=wa.schedule_detail_id
        left join work_schedule as ws
        on ws.id=wsd.schedule_id
        left join usermanagement.`users`
        on ws.user_id=`users`.id
        left join sys_config as sc
        on sc.`code`=wp.work_from
        left join sys_config as sc1
        on sc1.`code`=wsd.finish_status
        left join sys_config as sc2
        on sc2.code=wp.work_priority
        <where>
            assess_time is null
            and ws.submit_status = 'submitted'
            <if test="employeeId!=null">
                and users.id=#{employeeId}
            </if>
            <if test="finishStatus!=null">
                and finish_status=#{finishStatus}
            </if>
            <if test="workFrom!=null">
                and wp.work_From = #{workFrom}
            </if>
            <if test="workName!=null">
                and locate(#{workName},wp.work_name)
            </if>
            <if test="beginTime!=null">
                and wsd.begin_time>#{beginTime}
            </if>
            <if test="endTime!=null">
                and #{endTime}>finish_time
            </if>
            <if test="departmentId!=null">
                and users.department_id &lt;&gt; #{departmentId}
            </if>
        </where>
        order by begin_time desc, finish_time desc
        limit #{pageStart},#{pageSize}
    </select>
    <select id="queryOtherDeptAssessCount" parameterType="java.util.Map" resultType="Integer">
        select count(*)
        from work_schedule_detail as wsd
        left join work_pool as wp
        on wp.id=wsd.work_id
        left join work_assess as wa
        on wsd.id=wa.schedule_detail_id
        left join work_schedule as ws
        on ws.id=wsd.schedule_id
        left join usermanagement.`users`
        on ws.user_id=`users`.id
        left join sys_config as sc
        on sc.`code`=wp.work_from
        left join sys_config as sc1
        on sc1.`code`=wsd.finish_status
        <where>
            assess_time is null
            and ws.submit_status = 'submitted'
            <if test="employeeId!=null">
                and users.id=#{employeeId}
            </if>
            <if test="finishStatus!=null">
                and finish_status=#{finishStatus}
            </if>
            <if test="workFrom!=null">
                and wp.work_From = #{workFrom}
            </if>
            <if test="workName!=null">
                and locate(#{workName},wp.work_name)
            </if>
            <if test="beginTime!=null">
                and wsd.begin_time>#{beginTime}
            </if>
            <if test="endTime!=null">
                and #{endTime}>finish_time
            </if>
            <if test="departmentId!=null">
                and users.department_id &lt;&gt; #{departmentId}
            </if>
        </where>
    </select>
    <select id="leaderQueryAssessRecords" parameterType="java.util.Map"
            resultType="com.nankingdata.yc.work.models.dto.AssessRecordDto">
        select
        wa.id,
        wa.assess_time,
        wa.assess_grade,
        wa.assess_desc,
        wp.work_name,
        wp.work_content,
        wp.work_instructor,
        wp.work_minutes,
        sc.name as workFrom,
        users.real_name as empName,
        wsd.begin_time,
        wsd.finish_time,
        wsd.finish_status,
        sc1.name as workPriority
        from work_assess as wa
        left join work_schedule_detail as wsd
        on wsd.id=wa.schedule_detail_id
        left join work_pool as wp
        on wp.id=wsd.work_id
        left join usermanagement.users
        on users.id=wp.user_id
        left join sys_config as sc
        on sc.`code`=wp.work_from
        left join sys_config as sc1
        on sc1.code=wp.work_priority
        <where>
            <if test="assessUserId!=null">
                assess_user_id=#{assessUserId}
            </if>
            <if test="employeeId!=null">
                and users.id=#{employeeId}
            </if>
            <if test="finishStatus!=null">
                and finish_status=#{finishStatus}
            </if>
            <if test="workFrom!=null">
                and wp.work_From = #{workFrom}
            </if>
            <if test="workName!=null">
                and locate(#{workName},wp.work_name)
            </if>
            <if test="beginTime!=null">
                and date_format(#{beginTime},'%y-%c-%d') &lt;=date_format(wa.assess_time,'%y-%c-%d')
            </if>
            <if test="endTime!=null">
                and date_format(#{endTime},'%y-%c-%d') &gt;=date_format(wa.assess_time,'%y-%c-%d')
            </if>
            <if test="departmentId!=null">
                and users.department_id=#{departmentId}
            </if>
        </where>
        order by assess_time desc
        limit #{pageStart},#{pageSize}
    </select>
    <select id="leaderQueryAssessRecordsCount" parameterType="java.util.Map" resultType="Integer">
        select count(*)
        from work_assess as wa
        left join work_schedule_detail as wsd
        on wsd.id=wa.schedule_detail_id
        left join work_pool as wp
        on wp.id=wsd.work_id
        left join usermanagement.users
        on users.id=wp.user_id
        <where>
            <if test="assessUserId!=null">
                assess_user_id=#{assessUserId}
            </if>
            <if test="employeeId!=null">
                and users.id=#{employeeId}
            </if>
            <if test="finishStatus!=null">
                and finish_status=#{finishStatus}
            </if>
            <if test="workFrom!=null">
                and wp.work_From = #{workFrom}
            </if>
            <if test="workName!=null">
                and locate(#{workName},wp.work_name)
            </if>
            <if test="beginTime!=null">
                and date_format(#{beginTime},'%y-%c-%d') &lt;=date_format(wa.assess_time,'%y-%c-%d')
            </if>
            <if test="endTime!=null">
                and date_format(#{endTime},'%y-%c-%d') &gt;=date_format(wa.assess_time,'%y-%c-%d')
            </if>
            <if test="departmentId!=null">
                and users.department_id=#{departmentId}
            </if>
        </where>
    </select>
    <select id="queryAssessCondition" parameterType="java.util.Map"
            resultType="com.nankingdata.yc.work.models.bo.AssessConditionBo">
        select users.id as empId,users.real_name as empName,wa.assess_grade,COUNT(*)as `count`
        from work_assess as wa
        left join work_schedule_detail as wsd
        on wa.schedule_detail_id=wsd.id
        left join work_schedule as ws
        on wsd.schedule_id=ws.id
        left join usermanagement.users
        on users.id=ws.user_id
        <where>
            ws.submit_status = 'submitted'
            <if test="beginTime!=null">
                and DATE_FORMAT(ws.`date`,'%y-%c-%d') &gt;= DATE_FORMAT(#{beginTime},'%y-%c-%d')
            </if>
            <if test="endTime!=null">
                and DATE_FORMAT(ws.`date`,'%y-%c-%d') &lt;= DATE_FORMAT(#{endTime},'%y-%c-%d')
            </if>
            <if test="empId!=null">
                and user_id=#{empId}
            </if>
        </where>
        GROUP BY wa.assess_grade,ws.user_id
        order by user_id asc,assess_grade asc
    </select>
    <select id="queryOneAssessRecordByDetailId" resultType="com.nankingdata.yc.work.models.domain.WorkAssess"
            parameterType="Integer">
        select *
        from work_assess
        where schedule_detail_id=#{id}
    </select>
</mapper>
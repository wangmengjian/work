<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nankingdata.yc.work.models.dao.WorkScheduleDao">
    <select id="queryWorkScheduleByDate" parameterType="java.util.Map"
            resultType="com.nankingdata.yc.work.models.dto.WorkScheduleDto">
        select *
        from work_schedule
        where user_id=#{userId} and date_format(`date`,'%Y-%m-%d') = date_format(#{date}, '%Y-%m-%d')
    </select>
    <select id="queryWorkScheduleDetail" parameterType="java.util.Map"
            resultType="com.nankingdata.yc.work.models.dto.WorkScheduleDetailDto">
        select
        wsd.id,
        wp.work_name,
        wp.work_content,
        wp.work_instructor,
        wp.work_minutes,
        sc2.name as work_priority,
        sc1.name as work_from,
        sc.name as finish_status,
        wsd.finish_picture,
        wsd.finish_feedback,
        wsd.finish_condition,
        wsd.finish_time,
        wsd.work_id,
        wsd.begin_time,
        users.real_name as empName,
        wsd.schedule_id
        from work_schedule_detail as wsd
        left join sys_config as sc1
        on wsd.work_from=sc1.`code`
        left join work_pool as wp
        on wsd.work_id=wp.id
        left join sys_config as sc
        on wsd.finish_status=sc.`code`
        left join sys_config as sc2
        on wp.work_priority=sc2.code
        left join usermanagement.`users`
        on users.id=wp.user_id
        left join work_schedule as ws
        on ws.id=wsd.schedule_id
        <where>
            <if test="scheduleId!=null">
                schedule_id=#{scheduleId}
            </if>
            <if test="scheduleIds!=null">
                and schedule_id in
                <foreach collection="scheduleIds" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="workFrom!=null">
                and wsd.work_from=#{workFrom}
            </if>
            <if test="workName!=null">
                and locate(#{workName},work_name)
            </if>
            <if test="finishStatus!=null">
                and wsd.finish_status like #{finishStatus}
            </if>
            <if test="departmentId!=null">
                and users.department_id=#{departmentId}
            </if>
            <if test="companyId!=null">
                and users.company_id=#{companyId}
            </if>
            <if test="employeeId!=null">
                and ws.user_id=#{employeeId}
            </if>
            <if test="date!=null">
                and date_format(ws.date,'%Y-%m-%d') = date_format(#{date}, '%Y-%m-%d')
            </if>
            <if test="finishStatuss!=null">
                and wsd.finish_status in
                <foreach collection="finishStatuss" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
        order by wsd.begin_time desc
        <if test="pageStart!=null and pageSize!=null">
            limit #{pageStart},#{pageSize}
        </if>
    </select>
    <select id="queryWorkScheduleDetailCount" parameterType="java.util.Map" resultType="Integer">
        select count(*)
        from work_schedule_detail as wsd
        left join sys_config as sc1
        on wsd.work_from=sc1.`code`
        left join work_pool as wp
        on wsd.work_id=wp.id
        left join sys_config as sc
        on wsd.finish_status=sc.`code`
        <where>
            <if test="scheduleId!=null">
                schedule_id=#{scheduleId}
            </if>
            <if test="scheduleIds!=null">
                and schedule_id in
                <foreach collection="scheduleIds" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="workFrom!=null">
                and wsd.work_from=#{workFrom}
            </if>
            <if test="workName!=null">
                and locate(#{workName},work_name)
            </if>
            <if test="finishStatus!=null">
                and wsd.finish_status like #{finishStatus}
            </if>
            <if test="departmentId!=null">
                and users.department_id=#{departmentId}
            </if>
            <if test="companyId!=null">
                and users.company_id=#{companyId}
            </if>
            <if test="employeeId!=null">
                and ws.user_id=#{employeeId}
            </if>
            <if test="date!=null">
                and date_format(ws.date,'%Y-%m-%d') = date_format(#{date}, '%Y-%m-%d')
            </if>
            <if test="finishStatuss!=null">
                and wsd.finish_status in
                <foreach collection="finishStatuss" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    <update id="updateScheduleDetail" parameterType="com.nankingdata.yc.work.models.dto.WorkScheduleDetailDto">
        update work_schedule_detail
        set finish_status=
        <foreach collection="list" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.finishStatus}
        </foreach>,
        finish_picture=
        <foreach collection="list" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.finishPicture}
        </foreach>,
        finish_condition=
        <foreach collection="list" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.finishCondition}
        </foreach>,
        finish_feedback=
        <foreach collection="list" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.finishFeedback}
        </foreach>,
        finish_time=
        <foreach collection="list" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{item.id} then #{item.finishTime}
        </foreach>
        where id in
        <foreach collection="list" index="index" item="item"
                 separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </update>
    <update id="updateSchedule" parameterType="com.nankingdata.yc.work.models.dto.WorkScheduleDto">
        update work_schedule
        set submit_time=NOW(),submit_status='submitted'
        where id=#{scheduleId} and date_format(`date`,'%Y-%m-%d') = date_format(now(), '%Y-%m-%d')
    </update>
    <insert id="addSchedule" parameterType="com.nankingdata.yc.work.models.domain.WorkSchedule" useGeneratedKeys="true"
            keyProperty="id">
        insert into work_schedule(user_id,`date`)
        values(#{userId},NOW())
    </insert>
    <!--批量添加工作计划明细-->
    <insert id="addScheduleDetail" parameterType="com.nankingdata.yc.work.models.domain.WorkScheduleDetail">
        insert into
        work_schedule_detail(schedule_id,work_id,work_from,begin_time,finish_time,finish_picture,finish_condition,finish_feedback,finish_status,allot_user_id)
        values
        <foreach collection="workScheduleDetailList" separator="," item="item">
            (#{item.scheduleId},#{item.workId},#{item.workFrom},#{item.beginTime},#{item.finishTime},#{item.finishPicture},#{item.finishCondition},#{item.finishFeedback},#{item.finishStatus},#{item.allotUserId})
        </foreach>
    </insert>

    <select id="queryTodayScheduleId" parameterType="Integer" resultType="Integer">
        select id
        from work_schedule as ws
        where date_format(ws.date,'%Y-%m-%d') = date_format(now(), '%Y-%m-%d') and ws.user_id=#{userId}
    </select>
    <select id="querySchedules" parameterType="java.util.Map"
            resultType="com.nankingdata.yc.work.models.dto.WorkScheduleDto">
        select ws.*,users.real_name as empName,users.department_id
        from work_schedule as ws
        left join usermanagement.users
        on ws.user_id=users.id
        <where>
            <if test="departmentId!=null">
                users.department_id=#{departmentId}
            </if>
            <if test="companyId!=null">
                and users.company_id=#{companyId}
            </if>
            <if test="employeeId!=null">
                and user_id=#{employeeId}
            </if>
            <if test="employeeIds!=null">
                and user_id in
                <foreach collection="employeeIds" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="date!=null">
                and date_format(`date`,'%Y-%m-%d') = date_format(#{date}, '%Y-%m-%d')
            </if>
        </where>
        order by ws.date desc
        <if test="pageStart!=null">
            limit #{pageStart},#{pageSize}
        </if>
    </select>
    <select id="querySchedulesCount" parameterType="java.util.Map" resultType="Integer">
        select count(*)
        from work_schedule as ws
        left join usermanagement.users
        on ws.user_id=users.id
        <where>
            <if test="departmentId!=null">
                users.department_id=#{departmentId}
            </if>
            <if test="companyId!=null">
                and users.company_id=#{companyId}
            </if>
            <if test="employeeId!=null">
                and user_id=#{employeeId}
            </if>
            <if test="date!=null">
                and date_format(`date`,'%Y-%m-%d') = date_format(#{date}, '%Y-%m-%d')
            </if>
        </where>
    </select>
    <select id="queryScheduleById" parameterType="Integer"
            resultType="com.nankingdata.yc.work.models.domain.WorkSchedule">
        select *
        from work_schedule as ws
        where id=#{scheduleId}
    </select>
    <delete id="employeeRemoveWork" parameterType="java.util.Map">
        delete from work_schedule_detail
        where id=#{id}
    </delete>
    <select id="queryMoreWorkScheduleByEmployeeIds" parameterType="Integer"
            resultType="com.nankingdata.yc.work.models.domain.WorkSchedule">
        select ws.id,ws.user_id
        from work_schedule as ws
        <where>
            <if test="list!=null">
                ws.user_id in
                <foreach collection="list" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>
            and date_format(ws.date,'%Y-%m-%d') = date_format(now(), '%Y-%m-%d')
        </where>
    </select>
    <insert id="addMoreWorkSchedule" parameterType="com.nankingdata.yc.work.models.domain.WorkSchedule" keyProperty="id"
            useGeneratedKeys="true">
        insert into work_schedule(user_id,`date`)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.userId},NOW())
        </foreach>
    </insert>
    <insert id="addWorkScheduleDetails" parameterType="com.nankingdata.yc.work.models.domain.WorkScheduleDetail"
            useGeneratedKeys="true" keyProperty="id">
        insert into work_schedule_detail(schedule_id,work_id,work_from,begin_time,allot_user_id)
        values
        <foreach collection="list" separator="," item="item">
            (#{item.scheduleId},#{item.workId},#{item.workFrom},#{item.beginTime},#{item.allotUserId})
        </foreach>
    </insert>
    <select id="queryScheduleId" parameterType="java.util.Map" resultType="Integer">
        select id
        from work_schedule as ws
        where date_format(ws.date,'%Y-%m-%d') = date_format(#{date}, '%Y-%m-%d')
        and ws.user_id=#{userId}
    </select>
    <select id="queryMoreWorkScheduleDetails" parameterType="java.util.Map"
            resultType="com.nankingdata.yc.work.models.dto.WorkScheduleDetailDto">
        select *
        from work_schedule_detail
    </select>
    <select id="queryMoreEmployeesSchedules" resultType="com.nankingdata.yc.work.models.dto.WorkScheduleDto"
            parameterType="java.util.Map">
        select *
        from work_schedule as ws
        where date_format(ws.date,'%Y-%m-%d') = date_format(#{date}, '%Y-%m-%d')
        and ws.user_id in
        <foreach collection="idList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
    <select id="querySchedulesHasAssess" resultType="com.nankingdata.yc.work.models.dto.WorkScheduleDto"
            parameterType="java.util.Map">
        SELECT
        ws.*,
        users.real_name AS empName,
        users.department_id
        FROM
        work_schedule AS ws
        LEFT JOIN usermanagement.users ON ws.user_id = users.id
        left join work_schedule_detail as wsd
        on wsd.schedule_id=ws.id
        left join work_assess as wa
        on wa.schedule_detail_id=wsd.id
        left join work_pool as wp
        on wp.id=wsd.work_id
        <where>
            <if test="isAssess==1">
                assess_time is not null
            </if>
            <if test="isAssess==0">
                assess_time is null
            </if>
            and ws.submit_status = 'submitted'
            and (wsd.finish_status ='completed' or wsd.finish_status='uncompleted')
            <if test="assessGrade!=null">
                and assess_grade = #{assessGrade}
            </if>
            <if test="employeeId!=null">
                and ws.user_id=#{employeeId}
            </if>
            <if test="employeeIds!=null">
                and ws.user_id in
                <foreach collection="employeeIds" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="finishStatus!=null">
                and finish_status=#{finishStatus}
            </if>
            <if test="workFrom!=null">
                and wp.work_From = #{workFrom}
            </if>
            <if test="workName!=null">
                and locate(#{workName},wp.work_name)
            </if>
            <if test="beginTime!=null">
                and date_format(#{beginTime},'%Y-%m-%d') &lt;=date_format(ws.date,'%Y-%m-%d')
            </if>
            <if test="endTime!=null">
                and date_format(#{endTime},'%Y-%m-%d') &gt;=date_format(ws.date,'%Y-%m-%d')
            </if>
            <if test="departmentId!=null">
                and users.department_id=#{departmentId}
            </if>
            <if test="scheduleIds!=null">
                and ws.id in
                <foreach collection="scheduleIds" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>
        </where>
        group by ws.id
        order by ws.date desc
        <if test="pageStart!=null and pageSize!=null">
            limit #{pageStart},#{pageSize}
        </if>
    </select>
    <select id="querySchedulesHasAssessCount" parameterType="java.util.Map" resultType="Integer">
        select count(*)
        from
        (
        SELECT
        ws.*,
        users.real_name AS empName,
        users.department_id
        FROM
        work_schedule AS ws
        LEFT JOIN usermanagement.users ON ws.user_id = users.id
        left join work_schedule_detail as wsd
        on wsd.schedule_id=ws.id
        left join work_assess as wa
        on wa.schedule_detail_id=wsd.id
        left join work_pool as wp
        on wp.id=wsd.work_id
        <where>
            <if test="isAssess==1">
                assess_time is not null
            </if>
            <if test="isAssess==0">
                assess_time is null
            </if>
            and ws.submit_status = 'submitted'
            and (wsd.finish_status ='completed' or wsd.finish_status='uncompleted')
            <if test="assessGrade!=null">
                and assess_grade = #{assessGrade}
            </if>
            <if test="employeeId!=null">
                and ws.user_id=#{employeeId}
            </if>
            <if test="employeeIds!=null">
                and ws.user_id in
                <foreach collection="employeeIds" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="finishStatus!=null">
                and finish_status=#{finishStatus}
            </if>
            <if test="workFrom!=null">
                and wp.work_From = #{workFrom}
            </if>
            <if test="workName!=null">
                and locate(#{workName},wp.work_name)
            </if>
            <if test="beginTime!=null">
                and date_format(#{beginTime},'%Y-%m-%d') &lt;=date_format(ws.date,'%Y-%m-%d')
            </if>
            <if test="endTime!=null">
                and date_format(#{endTime},'%Y-%m-%d') &gt;=date_format(ws.date,'%Y-%m-%d')
            </if>
            <if test="departmentId!=null">
                and users.department_id=#{departmentId}
            </if>
            <if test="scheduleIds!=null">
                and ws.id in
                <foreach collection="scheduleIds" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>
        </where>
        group by ws.id
        ) as a
    </select>
</mapper>